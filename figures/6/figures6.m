function corrData = figures6(corrData)

%% collect data
timeResultsHop = load('data/results/classification/hoptimes-trainAll.mat');
timeResultsHop = timeResultsHop.results;
rnn5Results = load('data/results/classification/rnntimes.mat');
rnn5Results = rnn5Results.results;
rnn1Results = load('data/results/classification/train1cat/excludeTrainCategory/merged.mat');
rnn1Results = rnn1Results.results;
rnnAcrossAllResults = load('data/results/classification/rnn-across_all.mat');
rnnAcrossAllResults = rnnAcrossAllResults.results;
fc7Results = filterResults(rnn5Results, ...
    @(r) strcmp(r.name, 'RNN_features_fc7_noRelu_t0-libsvmccv'));
fc7Results = changeResults(fc7Results, 'name', ...
    @(r) repmat({'fc7'}, [size(r, 1), 1]));
% vs visibility
visibilityResults = mergeResults(fc7Results, ...
    ...% RNNH
    changeResults(filterResults(timeResultsHop, ...
    @(r) strcmp(r.name, 'caffenet_fc7-bipolar0-hop_t256-libsvmccv')), ...
    'name', @(r) repmat({'RNNH'}, [size(r, 1), 1])), ...
    ...% RNN5
    changeResults(filterResults(rnn5Results, ...
    @(r) strcmp(r.name, 'RNN_features_fc7_noRelu_t4-libsvmccv')), ...
    'name', @(r) repmat({'RNN5'}, [size(r, 1), 1])), ...
    ...% RNN4
    changeResults(filterResults(rnnAcrossAllResults, ...
    @(r) strcmp(r.name, 'RnnFeatures-timestep4-categories-libsvmccv')), ...
    'name', @(r) repmat({'RNN4'}, [size(r, 1), 1])), ...
    ...% RNN1
    changeResults(filterResults(rnn1Results, ...
    @(r) cellfun(@(m) ~isempty(m), ...
    regexp(r.name, 'train1cat/split-[0-5]_t\-4\/features-libsvmccv'))), ...
    'name', @(r) repmat({'RNN1'}, [size(r, 1), 1])), ...
    ...% RNNI
    changeResults(filterResults(rnnAcrossAllResults, ...
    @(r) strcmp(r.name, 'RnnFeatures-timestep4-rows-libsvmccv')), ...
    'name', @(r) repmat({'RNNI'}, [size(r, 1), 1]))...
    );
% vs time
timestepsHop = 2.^(1:8);
timestepsRnn = 1:4;
t0Results = filterResults(fc7Results, @(r) r.black ~= 0);
t0ResultsHop = t0Results;
t0ResultsHop = changeResults(t0ResultsHop, 'name', ...
    @(r) repmat({'caffenet_fc7_t0'}, [size(r, 1), 1]));
timeResultsHop = mergeResults(...
    filterResults(timeResultsHop, @(r) cellfun(@(m) ~isempty(m), ...
    regexp(r.name, ['caffenet_fc7-bipolar0-hop_t' ...
    timesteps2regexp(timestepsHop) '-libsvmccv'])) & r.black ~= 0), ...
    t0ResultsHop);
t0ResultsRnn = t0Results;
t0ResultsRnn = changeResults(t0ResultsRnn, 'name', ...
    @(r) repmat({'RNN_fc7_noRelu_t0-libsvmccv'}, [size(r, 1), 1]));
timeResultsRnn = mergeResults(t0ResultsRnn, ...
    filterResults(rnn5Results, @(r) cellfun(@(m) ~isempty(m), ...
    regexp(r.name, ['_t' timesteps2regexp(timestepsRnn)])) & r.black ~= 0));
timeResults = mergeResults(timeResultsHop, timeResultsRnn);
% correlation
timestepsHopCorrelation = [0, 2, 16, 64, 256];
correlationExemplarResults = mergeResults(...
    filterResults(timeResultsHop, @(r) cellfun(@(m) ~isempty(m), ...
    regexp(r.name, ['caffenet_fc7.*_t' ...
    timesteps2regexp(timestepsHopCorrelation)]))), ...
    timeResultsRnn);

figures = NaN(0);
%% tsne vs time
featureExtractors = {...
    % RNNH
    BipolarFeatures(0, AlexnetFc7Features()), ...
    NamedFeatures('caffenet_fc7-bipolar0-hop_t16'), ...
    NamedFeatures('caffenet_fc7-bipolar0-hop_t256'); ...
    % RNN5
    AlexnetFc7Features(), ...
    RnnFeatures(2, []), ...
    RnnFeatures(4, []); ...
    % RNN4
    AlexnetFc7Features(), ...
    NamedFeatures('RnnFeatures-timestep2-categories'), ...
    NamedFeatures('RnnFeatures-timestep4-categories'); ...
    % RNNI
    AlexnetFc7Features(), ...
    NamedFeatures('RnnFeatures-timestep2-images'), ...
    NamedFeatures('RnnFeatures-timestep4-images'); ...
    };
seeds = [2, 0, 0, 0];
for modelIter = 1:size(featureExtractors, 1)
    figs = plotWholeVsOccludedTsne(featureExtractors(modelIter, :), ...
        sprintf('6B-tsne_vs_time-%d', modelIter), seeds(modelIter));
    figures(end + 1:end + numel(figs)) = figs;
end

%% performances
% vs visibility
figures(end + 1) = figure('Name', '6C-performance_vs_visibility');
displayResults(visibilityResults);
% vs time
figures(end + 1) = figure('Name', '6D-performance_vs_time');
plotOverallPerformanceOverTime(timeResults);

%% correlations vs time
if ~exist('corrData', 'var')
    corrData = collectModelHumanCorrelationData(correlationExemplarResults);
end
% overall
figures(end + 1) = figure('Name', '6E-correlation_vs_time');
plotCorrelationOverTime(corrData);
% exemplars
figures(end + 1) = figure('Name', '6E_S1-similarity_exemplars');
plotExemplarCorrelationsOverTime(corrData);
% per category
figures(end + 1) = figure('Name', '6E_S2-correlation_vs_time-per_category');
plotCategoryCorrelationOverTime(corrData);
% exemplars
figs = plotCategoryCorrelationExemplarsOverTime(...
    corrData, '6E_S3-similarity_exemplars-per_category');
figures(end + 1:end + numel(figs)) = figs;


%% save figures
for fig = figures
    figName = get(fig, 'Name');
    figName = strrep(figName, '/', '_');
    saveFile = ['figures/6/', figName];
    saveas(fig, saveFile);
    export_fig(saveFile, '-eps', fig);
    close(fig);
end
end
